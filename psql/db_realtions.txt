==================Relation/Связи==================

1. Primary Key - Первичный ключ, ограничение на поле (зачастую id) которое будет использована в связях, на это поле будут ссылатся другие связи что бы устоновить связь

2. Foreing Key - внешний ключ который используется для устоновление связи между таблицыми, ссылаются всегда на Primaru Key другой таблицы

==========================Виды Связи===================

1. One to one - Один человек и один паспорт (в БД эти записи должны быть уникальными)
2. One to many - Один человек, много паспортов. Один автор, много книг. Одна категория, много товаров
3. Many to many - Много авторов - много книг, много учителей - много учеников, эта связь простраивается через 3ю дополнительную таблицу, в которой есть 2 FK, которая ссылается на эти 2 таблицы


=====================================One to one====================================

CREATE TABLE author (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50)
);

CREATE TABLE autobiography (
    id SERIAL PRIMARY KEY,
    body TEXT,
    author_id INT UNIQUE,

    CONSTRAINT fk_bio_author FOREIGN KEY (author_id) REFERENCES author (id)
);
CHAR - character - статичная длина строки 
VARCHAR - variable character - вариативная длина строки

======================One to Many=============================

CREATE TABLE category (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50)
);

CREATE TABLE product (
    id SERIAL PRIMARY KEY,
    title VARCHAR(100),
    category_id INT,

    CONSTRAINT fk_catygory_prod FOREIGN KEY (category_id) REFERENCES category (id)
);

=========================Many to Many=========================

CREATE TABLE developer (
    id SERIAL PRIMARY KEY, 
    name VARCHAR(50),
    last_name VARCHAR(50)
);

CREATE TABLE project (
    id SERIAL PRIMARY KEY,
    title VARCHAR(50),
    tz TEXT
);

CREATE TABLE dev_proj (
    id SERIAL PRIMARY KEY,
    developer_id INT, 
    project_id INT,

    CONSTRAINT fk_dev_dev_proj FOREIGN KEY (developer_id) REFERENCES developer (id),
    CONSTRAINT fk_proj_dev_proj FOREIGN KEY (project_id) REFERENCES project (id)
);

=================================JOIN=======================================

